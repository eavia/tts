//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM 关系源元数据

[assembly: EdmRelationshipAttribute("LogicLibary", "OrderHeadOrderBodySet", "OrderHead", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LogicLibary.OrderHead), "OrderBodySet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LogicLibary.OrderBody))]
[assembly: EdmRelationshipAttribute("LogicLibary", "BrandInBrand", "Brand", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(LogicLibary.Brand), "ChildBrand", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LogicLibary.Brand))]
[assembly: EdmRelationshipAttribute("LogicLibary", "GoodsUnitGoods", "GoodsUnit", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LogicLibary.GoodsUnit), "Goods", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LogicLibary.Goods))]
[assembly: EdmRelationshipAttribute("LogicLibary", "BrandGoods", "Brand", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LogicLibary.Brand), "Goods", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LogicLibary.Goods))]
[assembly: EdmRelationshipAttribute("LogicLibary", "GoodsChanged", "Goods", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(LogicLibary.Goods), "ChangedSet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(LogicLibary.Changed))]

#endregion

namespace LogicLibary
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class StoreEntities : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“StoreEntities”部分中的连接字符串初始化新 StoreEntities 对象。
        /// </summary>
        public StoreEntities() : base("name=StoreEntities", "StoreEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 StoreEntities 对象。
        /// </summary>
        public StoreEntities(string connectionString) : base(connectionString, "StoreEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 StoreEntities 对象。
        /// </summary>
        public StoreEntities(EntityConnection connection) : base(connection, "StoreEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Goods> GoodsSet
        {
            get
            {
                if ((_GoodsSet == null))
                {
                    _GoodsSet = base.CreateObjectSet<Goods>("GoodsSet");
                }
                return _GoodsSet;
            }
        }
        private ObjectSet<Goods> _GoodsSet;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<GoodsUnit> GoodsUnitSet
        {
            get
            {
                if ((_GoodsUnitSet == null))
                {
                    _GoodsUnitSet = base.CreateObjectSet<GoodsUnit>("GoodsUnitSet");
                }
                return _GoodsUnitSet;
            }
        }
        private ObjectSet<GoodsUnit> _GoodsUnitSet;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<OrderBody> OrderBodySet
        {
            get
            {
                if ((_OrderBodySet == null))
                {
                    _OrderBodySet = base.CreateObjectSet<OrderBody>("OrderBodySet");
                }
                return _OrderBodySet;
            }
        }
        private ObjectSet<OrderBody> _OrderBodySet;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<OrderHead> OrderHeadSet
        {
            get
            {
                if ((_OrderHeadSet == null))
                {
                    _OrderHeadSet = base.CreateObjectSet<OrderHead>("OrderHeadSet");
                }
                return _OrderHeadSet;
            }
        }
        private ObjectSet<OrderHead> _OrderHeadSet;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Brand> BrandSet
        {
            get
            {
                if ((_BrandSet == null))
                {
                    _BrandSet = base.CreateObjectSet<Brand>("BrandSet");
                }
                return _BrandSet;
            }
        }
        private ObjectSet<Brand> _BrandSet;
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<Changed> ChangedSet
        {
            get
            {
                if ((_ChangedSet == null))
                {
                    _ChangedSet = base.CreateObjectSet<Changed>("ChangedSet");
                }
                return _ChangedSet;
            }
        }
        private ObjectSet<Changed> _ChangedSet;

        #endregion
        #region AddTo 方法
    
        /// <summary>
        /// 用于向 GoodsSet EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToGoodsSet(Goods goods)
        {
            base.AddObject("GoodsSet", goods);
        }
    
        /// <summary>
        /// 用于向 GoodsUnitSet EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToGoodsUnitSet(GoodsUnit goodsUnit)
        {
            base.AddObject("GoodsUnitSet", goodsUnit);
        }
    
        /// <summary>
        /// 用于向 OrderBodySet EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToOrderBodySet(OrderBody orderBody)
        {
            base.AddObject("OrderBodySet", orderBody);
        }
    
        /// <summary>
        /// 用于向 OrderHeadSet EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToOrderHeadSet(OrderHead orderHead)
        {
            base.AddObject("OrderHeadSet", orderHead);
        }
    
        /// <summary>
        /// 用于向 BrandSet EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToBrandSet(Brand brand)
        {
            base.AddObject("BrandSet", brand);
        }
    
        /// <summary>
        /// 用于向 ChangedSet EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToChangedSet(Changed changed)
        {
            base.AddObject("ChangedSet", changed);
        }

        #endregion
    }
    

    #endregion
    
    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LogicLibary", Name="Brand")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Brand : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Brand 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="brandName">BrandName 属性的初始值。</param>
        /// <param name="userKey">UserKey 属性的初始值。</param>
        /// <param name="modified">Modified 属性的初始值。</param>
        public static Brand CreateBrand(global::System.Int32 id, global::System.String brandName, global::System.String userKey, global::System.DateTime modified)
        {
            Brand brand = new Brand();
            brand.ID = id;
            brand.BrandName = brandName;
            brand.UserKey = userKey;
            brand.Modified = modified;
            return brand;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BrandName
        {
            get
            {
                return _BrandName;
            }
            set
            {
                OnBrandNameChanging(value);
                ReportPropertyChanging("BrandName");
                _BrandName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BrandName");
                OnBrandNameChanged();
            }
        }
        private global::System.String _BrandName;
        partial void OnBrandNameChanging(global::System.String value);
        partial void OnBrandNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserKey
        {
            get
            {
                return _UserKey;
            }
            set
            {
                OnUserKeyChanging(value);
                ReportPropertyChanging("UserKey");
                _UserKey = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserKey");
                OnUserKeyChanged();
            }
        }
        private global::System.String _UserKey;
        partial void OnUserKeyChanging(global::System.String value);
        partial void OnUserKeyChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Modified
        {
            get
            {
                return _Modified;
            }
            set
            {
                OnModifiedChanging(value);
                ReportPropertyChanging("Modified");
                _Modified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Modified");
                OnModifiedChanged();
            }
        }
        private global::System.DateTime _Modified;
        partial void OnModifiedChanging(global::System.DateTime value);
        partial void OnModifiedChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LogicLibary", "BrandInBrand", "ChildBrand")]
        public EntityCollection<Brand> ChildBrandSet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Brand>("LogicLibary.BrandInBrand", "ChildBrand");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Brand>("LogicLibary.BrandInBrand", "ChildBrand", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LogicLibary", "BrandInBrand", "Brand")]
        public Brand RootBrand
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Brand>("LogicLibary.BrandInBrand", "Brand").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Brand>("LogicLibary.BrandInBrand", "Brand").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Brand> RootBrandReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Brand>("LogicLibary.BrandInBrand", "Brand");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Brand>("LogicLibary.BrandInBrand", "Brand", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LogicLibary", "BrandGoods", "Goods")]
        public EntityCollection<Goods> Goods
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Goods>("LogicLibary.BrandGoods", "Goods");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Goods>("LogicLibary.BrandGoods", "Goods", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LogicLibary", Name="Changed")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Changed : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Changed 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="value">Value 属性的初始值。</param>
        /// <param name="date">Date 属性的初始值。</param>
        /// <param name="quantity">Quantity 属性的初始值。</param>
        /// <param name="userKey">UserKey 属性的初始值。</param>
        /// <param name="modified">Modified 属性的初始值。</param>
        public static Changed CreateChanged(global::System.Int32 id, global::System.Double value, global::System.DateTime date, global::System.Double quantity, global::System.String userKey, global::System.DateTime modified)
        {
            Changed changed = new Changed();
            changed.ID = id;
            changed.Value = value;
            changed.Date = date;
            changed.Quantity = quantity;
            changed.UserKey = userKey;
            changed.Modified = modified;
            return changed;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Double _Value;
        partial void OnValueChanging(global::System.Double value);
        partial void OnValueChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Double _Quantity;
        partial void OnQuantityChanging(global::System.Double value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserKey
        {
            get
            {
                return _UserKey;
            }
            set
            {
                OnUserKeyChanging(value);
                ReportPropertyChanging("UserKey");
                _UserKey = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserKey");
                OnUserKeyChanged();
            }
        }
        private global::System.String _UserKey;
        partial void OnUserKeyChanging(global::System.String value);
        partial void OnUserKeyChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Modified
        {
            get
            {
                return _Modified;
            }
            set
            {
                OnModifiedChanging(value);
                ReportPropertyChanging("Modified");
                _Modified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Modified");
                OnModifiedChanged();
            }
        }
        private global::System.DateTime _Modified;
        partial void OnModifiedChanging(global::System.DateTime value);
        partial void OnModifiedChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LogicLibary", "GoodsChanged", "Goods")]
        public Goods Goods
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Goods>("LogicLibary.GoodsChanged", "Goods").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Goods>("LogicLibary.GoodsChanged", "Goods").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Goods> GoodsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Goods>("LogicLibary.GoodsChanged", "Goods");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Goods>("LogicLibary.GoodsChanged", "Goods", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LogicLibary", Name="Goods")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Goods : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 Goods 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="goodsName">GoodsName 属性的初始值。</param>
        /// <param name="quantity">Quantity 属性的初始值。</param>
        /// <param name="userKey">UserKey 属性的初始值。</param>
        /// <param name="modified">Modified 属性的初始值。</param>
        public static Goods CreateGoods(global::System.Int32 id, global::System.String goodsName, global::System.Double quantity, global::System.String userKey, global::System.DateTime modified)
        {
            Goods goods = new Goods();
            goods.ID = id;
            goods.GoodsName = goodsName;
            goods.Quantity = quantity;
            goods.UserKey = userKey;
            goods.Modified = modified;
            return goods;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GoodsName
        {
            get
            {
                return _GoodsName;
            }
            set
            {
                OnGoodsNameChanging(value);
                ReportPropertyChanging("GoodsName");
                _GoodsName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("GoodsName");
                OnGoodsNameChanged();
            }
        }
        private global::System.String _GoodsName;
        partial void OnGoodsNameChanging(global::System.String value);
        partial void OnGoodsNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Double _Quantity;
        partial void OnQuantityChanging(global::System.Double value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserKey
        {
            get
            {
                return _UserKey;
            }
            set
            {
                OnUserKeyChanging(value);
                ReportPropertyChanging("UserKey");
                _UserKey = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserKey");
                OnUserKeyChanged();
            }
        }
        private global::System.String _UserKey;
        partial void OnUserKeyChanging(global::System.String value);
        partial void OnUserKeyChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Modified
        {
            get
            {
                return _Modified;
            }
            set
            {
                OnModifiedChanging(value);
                ReportPropertyChanging("Modified");
                _Modified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Modified");
                OnModifiedChanged();
            }
        }
        private global::System.DateTime _Modified;
        partial void OnModifiedChanging(global::System.DateTime value);
        partial void OnModifiedChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LogicLibary", "GoodsUnitGoods", "GoodsUnit")]
        public GoodsUnit Unit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoodsUnit>("LogicLibary.GoodsUnitGoods", "GoodsUnit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoodsUnit>("LogicLibary.GoodsUnitGoods", "GoodsUnit").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GoodsUnit> UnitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoodsUnit>("LogicLibary.GoodsUnitGoods", "GoodsUnit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GoodsUnit>("LogicLibary.GoodsUnitGoods", "GoodsUnit", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LogicLibary", "BrandGoods", "Brand")]
        public Brand Brand
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Brand>("LogicLibary.BrandGoods", "Brand").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Brand>("LogicLibary.BrandGoods", "Brand").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Brand> BrandReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Brand>("LogicLibary.BrandGoods", "Brand");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Brand>("LogicLibary.BrandGoods", "Brand", value);
                }
            }
        }
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LogicLibary", "GoodsChanged", "ChangedSet")]
        public EntityCollection<Changed> ChangedSet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Changed>("LogicLibary.GoodsChanged", "ChangedSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Changed>("LogicLibary.GoodsChanged", "ChangedSet", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LogicLibary", Name="GoodsUnit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GoodsUnit : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 GoodsUnit 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="unitName">UnitName 属性的初始值。</param>
        /// <param name="userKey">UserKey 属性的初始值。</param>
        /// <param name="modified">Modified 属性的初始值。</param>
        public static GoodsUnit CreateGoodsUnit(global::System.Int32 id, global::System.String unitName, global::System.String userKey, global::System.DateTime modified)
        {
            GoodsUnit goodsUnit = new GoodsUnit();
            goodsUnit.ID = id;
            goodsUnit.UnitName = unitName;
            goodsUnit.UserKey = userKey;
            goodsUnit.Modified = modified;
            return goodsUnit;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UnitName
        {
            get
            {
                return _UnitName;
            }
            set
            {
                OnUnitNameChanging(value);
                ReportPropertyChanging("UnitName");
                _UnitName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UnitName");
                OnUnitNameChanged();
            }
        }
        private global::System.String _UnitName;
        partial void OnUnitNameChanging(global::System.String value);
        partial void OnUnitNameChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserKey
        {
            get
            {
                return _UserKey;
            }
            set
            {
                OnUserKeyChanging(value);
                ReportPropertyChanging("UserKey");
                _UserKey = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserKey");
                OnUserKeyChanged();
            }
        }
        private global::System.String _UserKey;
        partial void OnUserKeyChanging(global::System.String value);
        partial void OnUserKeyChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Modified
        {
            get
            {
                return _Modified;
            }
            set
            {
                OnModifiedChanging(value);
                ReportPropertyChanging("Modified");
                _Modified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Modified");
                OnModifiedChanged();
            }
        }
        private global::System.DateTime _Modified;
        partial void OnModifiedChanging(global::System.DateTime value);
        partial void OnModifiedChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LogicLibary", "GoodsUnitGoods", "Goods")]
        public EntityCollection<Goods> GoodsSet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Goods>("LogicLibary.GoodsUnitGoods", "Goods");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Goods>("LogicLibary.GoodsUnitGoods", "Goods", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LogicLibary", Name="OrderBody")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OrderBody : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 OrderBody 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="value">Value 属性的初始值。</param>
        public static OrderBody CreateOrderBody(global::System.Int32 id, global::System.Int16 value)
        {
            OrderBody orderBody = new OrderBody();
            orderBody.ID = id;
            orderBody.Value = value;
            return orderBody;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Int16 _Value;
        partial void OnValueChanging(global::System.Int16 value);
        partial void OnValueChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LogicLibary", "OrderHeadOrderBodySet", "OrderHead")]
        public OrderHead OrderHead
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderHead>("LogicLibary.OrderHeadOrderBodySet", "OrderHead").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderHead>("LogicLibary.OrderHeadOrderBodySet", "OrderHead").Value = value;
            }
        }
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OrderHead> OrderHeadReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderHead>("LogicLibary.OrderHeadOrderBodySet", "OrderHead");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OrderHead>("LogicLibary.OrderHeadOrderBodySet", "OrderHead", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="LogicLibary", Name="OrderHead")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OrderHead : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 OrderHead 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        /// <param name="buyer">Buyer 属性的初始值。</param>
        /// <param name="sum">Sum 属性的初始值。</param>
        public static OrderHead CreateOrderHead(global::System.Int32 id, global::System.String buyer, global::System.Int32 sum)
        {
            OrderHead orderHead = new OrderHead();
            orderHead.ID = id;
            orderHead.Buyer = buyer;
            orderHead.Sum = sum;
            return orderHead;
        }

        #endregion
        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Buyer
        {
            get
            {
                return _Buyer;
            }
            set
            {
                OnBuyerChanging(value);
                ReportPropertyChanging("Buyer");
                _Buyer = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Buyer");
                OnBuyerChanged();
            }
        }
        private global::System.String _Buyer;
        partial void OnBuyerChanging(global::System.String value);
        partial void OnBuyerChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Sum
        {
            get
            {
                return _Sum;
            }
            set
            {
                OnSumChanging(value);
                ReportPropertyChanging("Sum");
                _Sum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sum");
                OnSumChanged();
            }
        }
        private global::System.Int32 _Sum;
        partial void OnSumChanging(global::System.Int32 value);
        partial void OnSumChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status = "NEW";
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();

        #endregion
    
        #region 导航属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("LogicLibary", "OrderHeadOrderBodySet", "OrderBodySet")]
        public EntityCollection<OrderBody> OrderBodySet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderBody>("LogicLibary.OrderHeadOrderBodySet", "OrderBodySet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderBody>("LogicLibary.OrderHeadOrderBodySet", "OrderBodySet", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
